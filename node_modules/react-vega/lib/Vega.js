"use strict";

require("core-js/modules/es.array.concat");

require("core-js/modules/es.array.index-of");

require("core-js/modules/es.object.assign");

require("core-js/modules/es.object.keys");

exports.__esModule = true;
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _shallowEqual = _interopRequireDefault(require("./utils/shallowEqual"));

var _updateMultipleDatasetsInView = _interopRequireDefault(require("./utils/updateMultipleDatasetsInView"));

var _VegaEmbed = _interopRequireDefault(require("./VegaEmbed"));

var _constants = require("./constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var EMPTY = {};

var Vega =
/*#__PURE__*/
function (_React$PureComponent) {
  _inheritsLoose(Vega, _React$PureComponent);

  function Vega() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;

    _defineProperty(_assertThisInitialized(_this), "vegaEmbed", _react.default.createRef());

    _defineProperty(_assertThisInitialized(_this), "handleNewView", function (view) {
      _this.update();

      var _this$props$onNewView = _this.props.onNewView,
          onNewView = _this$props$onNewView === void 0 ? _constants.NOOP : _this$props$onNewView;
      onNewView(view);
    });

    return _this;
  }

  var _proto = Vega.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.update();
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    if (!(0, _shallowEqual.default)(this.props.data, prevProps.data)) {
      this.update();
    }
  };

  _proto.update = function update() {
    var data = this.props.data;

    if (data) {
      if (this.vegaEmbed.current && Object.keys(data).length > 0) {
        this.vegaEmbed.current.modifyView(function (view) {
          (0, _updateMultipleDatasetsInView.default)(view, data);
          view.resize().run();
        });
      }
    }
  };

  _proto.render = function render() {
    var _this$props = this.props,
        data = _this$props.data,
        restProps = _objectWithoutPropertiesLoose(_this$props, ["data"]);

    return _react.default.createElement(_VegaEmbed.default, _extends({
      ref: this.vegaEmbed
    }, restProps, {
      onNewView: this.handleNewView
    }));
  };

  return Vega;
}(_react.default.PureComponent);

exports.default = Vega;

_defineProperty(Vega, "defaultProps", {
  data: EMPTY
});